<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>dk.northtech.multimodulemavenlayout</groupId>
  <artifactId>multi-module-maven-layout-parent</artifactId>
  <!-- The parent pom is a snapshot to indicate that it will be updated without version changes -->
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <modules>
    <module>multimodule-core</module>
    <module>multimodule-webapi</module>
  </modules>

  <properties>
    <!-- This is the global release number, shared and recognized by all modules.
	     This is different from the (unchanging) parent version. -->
    <revision>1.0.0-SNAPSHOT</revision>

    <!-- Shared versions of the most common tools -->
    <dropwizard.metrics.version>4.1.0</dropwizard.metrics.version>
    <findbugs.jsr305.version>3.0.2</findbugs.jsr305.version>
    <geotools.version>21.1</geotools.version>
    <gson.version>2.8.5</gson.version>
    <guava.version>27.1-jre</guava.version>
    <guice.version>4.2.2</guice.version>
    <logback.version>1.2.3</logback.version>
    <northtech.gson.version>4.2.5</northtech.gson.version>
    <postgresql.version>42.2.5.jre7</postgresql.version>
    <servlet.version>3.1.0</servlet.version>
    <slf4j.version>1.7.26</slf4j.version>

    <maven.build.timestamp.format>yyyy-MM-dd_HHmm</maven.build.timestamp.format>
    <!-- Due to a quirk in Maven, maven.build.timestamp is not available to the resource filters, so we create an
         explicit property to carry it. (It has been fixed in newer versions of the resources plugin, but not in the
         war plugin). -->
    <timestamp>${maven.build.timestamp}</timestamp>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <parent-dir>${basedir}</parent-dir>
  </properties>

  <dependencies>
    <!-- Shared test tools which can/should be used in all projects -->
    <dependency>
      <groupId>com.google.truth.extensions</groupId>
      <artifactId>truth-java8-extension</artifactId>
      <version>0.44</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.jgiven</groupId>
      <artifactId>jgiven-junit5</artifactId>
      <version>0.17.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.4.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>2.27.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <!-- pluginManagement sets up potential plugins and their base configurations which the individual projects
         can activate by referencing just the qualified plugin name -->
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <release>11</release>
            <!--
            <source>1.8</source>
            <target>1.8</target>
            -->
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
          <configuration>
            <!-- Do not deploy to repository until all submodules have been built successfully -->
            <deployAtEnd>true</deployAtEnd>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.1</version>
          <configuration>
            <archive>
              <manifestEntries>
                <Built-By>
                  <!-- Don't leak OS-based user names into public distributions -->
                </Built-By>
                <!-- Each package which activates the maven-jar-plugin should set up its module name,
                     typically using the longest common package prefix as name. -->
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M3</version>
          <configuration>
            <systemPropertyVariables>
              <slf4j.detectLoggerNameMismatch>true</slf4j.detectLoggerNameMismatch>
            </systemPropertyVariables>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
          <configuration>
            <!-- Merge project version into the web.xml display-name: -->
            <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.7</version>
          <configuration>
            <rulesUri>file://${parent-dir}/maven-version-rules.xml</rulesUri>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.ekryd.sortpom</groupId>
          <artifactId>sortpom-maven-plugin</artifactId>
          <version>2.10.0</version>
          <configuration>
            <predefinedSortOrder>custom_1</predefinedSortOrder>
            <nrOfIndentSpace>2</nrOfIndentSpace>
            <sortDependencies>scope,groupId,artifactId</sortDependencies>
            <sortModules>true</sortModules>
            <sortPlugins>executions,groupId,artifactId</sortPlugins>
            <sortProperties>false</sortProperties>
            <keepBlankLines>true</keepBlankLines>
            <createBackupFile>false</createBackupFile>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>sort</goal>
              </goals>
              <phase>verify</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>com.tngtech.jgiven</groupId>
          <artifactId>jgiven-maven-plugin</artifactId>
          <version>0.17.1</version>
          <configuration>
            <format>html</format>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>report</goal>
              </goals>
              <phase>test</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M2</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>3.5</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>1.1.0</version>
          <configuration>
            <updatePomFile>true</updatePomFile>
          </configuration>
          <executions>
            <execution>
              <id>flatten</id>
              <goals>
                <goal>flatten</goal>
              </goals>
              <phase>process-resources</phase>
            </execution>
            <execution>
              <id>flatten.clean</id>
              <goals>
                <goal>clean</goal>
              </goals>
              <phase>clean</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <!-- Activate almost all the plugins above by default in all projects.
           One notable exception is the jar plugin which each project should set up individually to include an
           Automatic-Module-Name in manifestEntries. -->
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
      </plugin>
      <!--
      <plugin>
        <groupId>com.tngtech.jgiven</groupId>
        <artifactId>jgiven-maven-plugin</artifactId>
      </plugin>
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <!-- Explicitly adding Central at the top speeds up resolution of common dependencies -->
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <url>https://repo1.maven.org/maven2</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>boundless</id>
      <name>Boundless Maven Repository</name>
      <url>http://repo.boundlessgeo.com/main</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>osgeo</id>
      <name>GeoTools official</name>
      <url>http://download.osgeo.org/webdav/geotools/</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>northtech</id>
      <name>NorthTech repository</name>
      <url>http://m2.northtech.dk/content/repositories/releases/</url>
    </repository>
    <repository>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>northtech-snapshots</id>
      <name>NorthTech repository</name>
      <url>https://m2.northtech.dk/content/repositories/snapshots/</url>
    </repository>
  </repositories>
</project>
